.TH "JsonArray" 3 "2018年 六月 29日 星期五" "Version 3.0" "xlang" \" -*- nroff -*-
.ad l
.nh
.SH NAME
JsonArray \- json数组类  

.SH SYNOPSIS
.br
.PP
.SS "包函数"
.SH "详细描述"
.PP 
json数组类 
.PP
在文件 JsonArray\&.xcs 第 6 行定义\&.
.SH "构造及析构函数说明"
.PP 
.SS "\fBJsonArray\fP ()\fC [package]\fP"

.PP
构造一个json对象 
.SH "成员函数说明"
.PP 
.SS "\fBJsonArray\fP clone ()\fC [package]\fP"

.PP
克隆对象 
.PP
\fB返回:\fP
.RS 4
新对象 
.RE
.PP

.SS "bool equals (JsonArrayvalue)\fC [package]\fP"

.PP
测试两个数据对象是否同一个 
.PP
\fB参数:\fP
.RS 4
\fIvalue\fP 数据对象 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP
\fB返回:\fP
.RS 4
结果 
.RE
.PP

.SS "\fBJsonObject\fP get (int index)\fC [package]\fP"

.PP
获取指定位置的值 
.PP
\fB参数:\fP
.RS 4
\fIindex\fP 位置序号 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP
\fB返回:\fP
.RS 4
结果 
.RE
.PP

.SS "\fBJsonArray\fP getArray (int index)\fC [package]\fP"

.PP
获取指定位置的值 
.PP
\fB参数:\fP
.RS 4
\fIindex\fP 位置序号 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP
\fB返回:\fP
.RS 4
结果 
.RE
.PP

.SS "bool getBool (int index)\fC [package]\fP"

.PP
获取指定位置的值 
.PP
\fB参数:\fP
.RS 4
\fIindex\fP 位置序号 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP
\fB返回:\fP
.RS 4
结果 
.RE
.PP

.SS "double getDouble (int index)\fC [package]\fP"

.PP
获取指定位置的值 
.PP
\fB参数:\fP
.RS 4
\fIindex\fP 位置序号 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP
\fB返回:\fP
.RS 4
结果 
.RE
.PP

.SS "int getInt (int index)\fC [package]\fP"

.PP
获取指定位置的值 
.PP
\fB参数:\fP
.RS 4
\fIindex\fP 位置序号 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP
\fB返回:\fP
.RS 4
结果 
.RE
.PP

.SS "\fBString\fP getString (int index)\fC [package]\fP"

.PP
获取指定位置的值 
.PP
\fB参数:\fP
.RS 4
\fIindex\fP 位置序号 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP
\fB返回:\fP
.RS 4
结果 
.RE
.PP

.SS "bool isNull (int index)\fC [package]\fP"

.PP
测试key对应的值是否为空 
.PP
\fB参数:\fP
.RS 4
\fIindex\fP 位置序号 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP
\fB返回:\fP
.RS 4
结果 
.RE
.PP

.SS "int length ()\fC [package]\fP"

.PP
获取数组长度 
.PP
\fB返回:\fP
.RS 4
结果 
.RE
.PP

.SS "void put (int index, int value)\fC [package]\fP"

.PP
插入数据 
.PP
\fB参数:\fP
.RS 4
\fIindex\fP 位置序号 
.br
\fIvalue\fP 数据对象 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP

.SS "void put (int index, double value)\fC [package]\fP"

.PP
插入数据 
.PP
\fB参数:\fP
.RS 4
\fIindex\fP 位置序号 
.br
\fIvalue\fP 数据对象 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP

.SS "void put (int index, bool value)\fC [package]\fP"

.PP
插入数据 
.PP
\fB参数:\fP
.RS 4
\fIindex\fP 位置序号 
.br
\fIvalue\fP 数据对象 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP

.SS "void put (int index, \fBString\fP value)\fC [package]\fP"

.PP
插入数据 
.PP
\fB参数:\fP
.RS 4
\fIindex\fP 位置序号 
.br
\fIvalue\fP 数据对象 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP

.SS "void put (int index, \fBJsonArray\fP value)\fC [package]\fP"

.PP
插入数据 
.PP
\fB参数:\fP
.RS 4
\fIindex\fP 位置序号 
.br
\fIvalue\fP 数据对象 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP

.SS "void put (int index, \fBJsonObject\fP value)\fC [package]\fP"

.PP
插入数据 
.PP
\fB参数:\fP
.RS 4
\fIindex\fP 位置序号 
.br
\fIvalue\fP 数据对象 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP

.SS "void put (int value)\fC [package]\fP"

.PP
添加数据 
.PP
\fB参数:\fP
.RS 4
\fIvalue\fP 数据对象 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP

.SS "void put (double value)\fC [package]\fP"

.PP
添加数据 
.PP
\fB参数:\fP
.RS 4
\fIvalue\fP 数据对象 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP

.SS "void put (bool value)\fC [package]\fP"

.PP
添加数据 
.PP
\fB参数:\fP
.RS 4
\fIvalue\fP 数据对象 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP

.SS "void put (\fBString\fP value)\fC [package]\fP"

.PP
添加数据 
.PP
\fB参数:\fP
.RS 4
\fIvalue\fP 数据对象 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP

.SS "void put (\fBJsonArray\fP value)\fC [package]\fP"

.PP
添加数据 
.PP
\fB参数:\fP
.RS 4
\fIvalue\fP 数据对象 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP

.SS "void put (\fBJsonObject\fP value)\fC [package]\fP"

.PP
添加数据 
.PP
\fB参数:\fP
.RS 4
\fIvalue\fP 数据对象 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP

.SS "bool remove (int index)\fC [package]\fP"

.PP
删除指定位置的数据 
.PP
\fB参数:\fP
.RS 4
\fIindex\fP 位置序号 
.RE
.PP
\fB异常:\fP
.RS 4
\fINullPointerException\fP 空指针异常 
.RE
.PP
\fB返回:\fP
.RS 4
结果 
.RE
.PP

.SS "\fBString\fP toString (bool bident)\fC [package]\fP"

.PP
生成json字符串 
.PP
\fB参数:\fP
.RS 4
\fIbident\fP 是否保持缩进格式 
.RE
.PP
\fB返回:\fP
.RS 4
结果 
.RE
.PP


.SH "作者"
.PP 
由 Doyxgen 通过分析 xlang 的 源代码自动生成\&.
